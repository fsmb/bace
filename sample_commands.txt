* Preprocessor {{{
Takes the unclean data and filters it:
python bace_driver.py pp bace_data/data -o bace_data/filtered_data --stopwords bace/DistinctCombinedStopWords.csv --export all
python bace_driver.py pp data --stopwords bace/DistinctCombinedStopWords.csv --export all

Takes the clean data and filters it:
python bace_driver.py pp bace_data/data_clean -o bace_data/filtered_data_clean --stopwords bace/DistinctCombinedStopWords.csv --export all
* Preprocessor }}}



* Bag of Words Classifier {{{


Train and test on filtered, uncleaned data with BOW:
python bace_driver.py bow bace_data/filtered_data/train_texts.csv -t bace_data/filtered_data/test_texts.csv -n 300

Train and test on filtered, cleaned data with BOW:
python bace_driver.py bow bace_data/filtered_data_clean/train_texts.csv -t bace_data/filtered_data_clean/test_texts.csv -n 300
python bace_driver.py bow filtered_data_clean/train_texts.csv -t filtered_data_clean/test_texts.csv -n 300

Train on all filtered, cleaned data and test on all filtered data:
python bace_driver.py bow bace_data/filtered_data_clean/all_texts.csv -t bace_data/filtered_data/all_texts.csv -n 300
python bace_driver.py bow filtered_data_clean/all_texts.csv -t filtered_data_clean/all_texts.csv -n 300

As above, reversed:
python bace_driver.py bow bace_data/filtered_data/all_texts.csv -t bace_data/filtered_data_clean/all_texts.csv -n 300

Test on a certain filtered, uncleaned file with BOW:
python bace_driver.py bow bace_data/filtered_data/train_texts.csv -t bace_data/filtered_data/test_texts.csv -s 1 -n 300

Test on a certain filtered, cleaned file with BOW:
python bace_driver.py bow bace_data/filtered_data_clean/train_texts.csv -t bace_data/filtered_data_clean/test_texts.csv -s 1 -n 300


Good n value for bayesian on clean = 300 (got .6)
Good n value for bayesian on unclean = 400 (got .41)

* Bag of Words Classifier }}}



* Neural Classifier {{{

Evaluator

python bace_driver.py nn glove_embeddings/glove.6B.50d.txt 50 -i bace_data/data_clean -e .8


Slicer

python bace_driver.py nn glove_embeddings/glove.6B.50d.txt 50 -i bace_data/nn/data_clean -s bace_data/nn_test/CS_3018927_DONE.txt --slice_length 50 --slice_overlap .2


Test on selections in a folder

python bace_driver.py nn glove_embeddings/glove.6B.50d.txt 50 -i bace_data/nn/data_clean -t bace_data/nn_test]

* Neural Classifier }}}



* Fasttext Classifier {{{
Train and test on filtered data. Print out the results to stdout:

python3 bace_driver.py ft -m --test-file filtered_data_clean/fasttext_test.txt filtered_data_clean/fasttext_train.txt


Train on filtered data. Generate predictions of files that are in the format
found when generating test set split file (all_texts.csv, train_texts.csv, or
test_texts.csv) from the preprocessor. Print out results to stdout:

python3 bace_driver.py ft -m --predict-test-texts filtered_data_clean/test_texts.csv filtered_data_clean/fasttext_train.txt


Train and test on filtered data. Generate predictions of the given fasttext test
set. Print out results to stdout:

python3 bace_driver.py ft -m --test-file filtered_data_clean/fasttext_test.txt --predict-test-split filtered_data_clean/fasttext_train.txt


Train on filtered data. Generate prediction of the given string. Print out
results to stdout:

python3 bace_driver.py ft -m --test-file filtered_data_clean/fasttext_test.txt --predict-strip "Misconduct"  filtered_data_clean/fasttext_train.txt
* Fasttext Classifier }}}
